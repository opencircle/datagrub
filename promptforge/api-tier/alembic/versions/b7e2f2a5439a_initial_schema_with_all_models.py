"""Initial schema with all models

Revision ID: b7e2f2a5439a
Revises: 
Create Date: 2025-10-05 18:51:17.252357

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b7e2f2a5439a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('model_providers',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('provider_type', sa.Enum('OPENAI', 'ANTHROPIC', 'GOOGLE', 'COHERE', 'HUGGINGFACE', 'CUSTOM', name='modelprovidertype'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('api_base_url', sa.String(length=255), nullable=True),
    sa.Column('api_key_encrypted', sa.Text(), nullable=True),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('organizations',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('ai_models',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('model_id', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('supports_streaming', sa.Boolean(), nullable=True),
    sa.Column('supports_function_calling', sa.Boolean(), nullable=True),
    sa.Column('supports_vision', sa.Boolean(), nullable=True),
    sa.Column('max_context_length', sa.Integer(), nullable=True),
    sa.Column('input_cost_per_million', sa.Float(), nullable=True),
    sa.Column('output_cost_per_million', sa.Float(), nullable=True),
    sa.Column('default_temperature', sa.Float(), nullable=True),
    sa.Column('default_max_tokens', sa.Integer(), nullable=True),
    sa.Column('default_config', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_deprecated', sa.Boolean(), nullable=False),
    sa.Column('provider_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['provider_id'], ['model_providers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'DEVELOPER', 'VIEWER', name='userrole'), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('projects',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('policies',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('policy_type', sa.String(length=100), nullable=False),
    sa.Column('rules', sa.JSON(), nullable=False),
    sa.Column('threshold', sa.JSON(), nullable=True),
    sa.Column('severity', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='policyseverity'), nullable=False),
    sa.Column('action', sa.Enum('LOG', 'WARN', 'BLOCK', 'ALERT', name='policyaction'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_enforced', sa.Boolean(), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prompts',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('current_version_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['current_version_id'], ['prompt_versions.id'], name='fk_prompt_current_version', use_alter=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('evaluations',
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('evaluation_type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('config', sa.JSON(), nullable=True),
    sa.Column('dataset_id', sa.String(length=255), nullable=True),
    sa.Column('total_tests', sa.Integer(), nullable=True),
    sa.Column('passed_tests', sa.Integer(), nullable=True),
    sa.Column('failed_tests', sa.Integer(), nullable=True),
    sa.Column('avg_score', sa.Float(), nullable=True),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('prompt_id', sa.UUID(), nullable=True),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['prompt_id'], ['prompts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prompt_versions',
    sa.Column('version_number', sa.Integer(), nullable=False),
    sa.Column('template', sa.Text(), nullable=False),
    sa.Column('system_message', sa.Text(), nullable=True),
    sa.Column('variables', sa.JSON(), nullable=True),
    sa.Column('model_config', sa.JSON(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('avg_latency_ms', sa.Float(), nullable=True),
    sa.Column('avg_cost', sa.Float(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('prompt_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['prompt_id'], ['prompts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('evaluation_results',
    sa.Column('test_name', sa.String(length=255), nullable=False),
    sa.Column('input_data', sa.JSON(), nullable=False),
    sa.Column('expected_output', sa.Text(), nullable=True),
    sa.Column('actual_output', sa.Text(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('passed', sa.Boolean(), nullable=True),
    sa.Column('latency_ms', sa.Float(), nullable=True),
    sa.Column('token_count', sa.Integer(), nullable=True),
    sa.Column('cost', sa.Float(), nullable=True),
    sa.Column('metrics', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('evaluation_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['evaluation_id'], ['evaluations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('traces',
    sa.Column('trace_id', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('input_data', sa.JSON(), nullable=True),
    sa.Column('output_data', sa.JSON(), nullable=True),
    sa.Column('trace_metadata', sa.JSON(), nullable=True),
    sa.Column('total_duration_ms', sa.Float(), nullable=True),
    sa.Column('total_tokens', sa.Integer(), nullable=True),
    sa.Column('total_cost', sa.Float(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('error_type', sa.String(length=100), nullable=True),
    sa.Column('project_id', sa.UUID(), nullable=False),
    sa.Column('prompt_version_id', sa.UUID(), nullable=True),
    sa.Column('model_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['model_id'], ['ai_models.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['prompt_version_id'], ['prompt_versions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_traces_trace_id'), 'traces', ['trace_id'], unique=True)
    op.create_table('policy_violations',
    sa.Column('violation_type', sa.String(length=100), nullable=False),
    sa.Column('severity', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='policyseverity'), nullable=False),
    sa.Column('detected_value', sa.JSON(), nullable=True),
    sa.Column('threshold_value', sa.JSON(), nullable=True),
    sa.Column('confidence_score', sa.Integer(), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('violation_metadata', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('resolved_at', sa.String(length=50), nullable=True),
    sa.Column('resolved_by', sa.UUID(), nullable=True),
    sa.Column('policy_id', sa.UUID(), nullable=False),
    sa.Column('trace_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['policy_id'], ['policies.id'], ),
    sa.ForeignKeyConstraint(['resolved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['trace_id'], ['traces.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('spans',
    sa.Column('span_id', sa.String(length=255), nullable=False),
    sa.Column('parent_span_id', sa.String(length=255), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('span_type', sa.String(length=50), nullable=True),
    sa.Column('start_time', sa.Float(), nullable=False),
    sa.Column('end_time', sa.Float(), nullable=True),
    sa.Column('duration_ms', sa.Float(), nullable=True),
    sa.Column('input_data', sa.JSON(), nullable=True),
    sa.Column('output_data', sa.JSON(), nullable=True),
    sa.Column('span_metadata', sa.JSON(), nullable=True),
    sa.Column('model_name', sa.String(length=100), nullable=True),
    sa.Column('prompt_tokens', sa.Integer(), nullable=True),
    sa.Column('completion_tokens', sa.Integer(), nullable=True),
    sa.Column('total_tokens', sa.Integer(), nullable=True),
    sa.Column('temperature', sa.Float(), nullable=True),
    sa.Column('max_tokens', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('trace_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['trace_id'], ['traces.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_spans_parent_span_id'), 'spans', ['parent_span_id'], unique=False)
    op.create_index(op.f('ix_spans_span_id'), 'spans', ['span_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_spans_span_id'), table_name='spans')
    op.drop_index(op.f('ix_spans_parent_span_id'), table_name='spans')
    op.drop_table('spans')
    op.drop_table('policy_violations')
    op.drop_index(op.f('ix_traces_trace_id'), table_name='traces')
    op.drop_table('traces')
    op.drop_table('evaluation_results')
    op.drop_table('prompt_versions')
    op.drop_table('evaluations')
    op.drop_table('prompts')
    op.drop_table('policies')
    op.drop_table('projects')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('ai_models')
    op.drop_table('organizations')
    op.drop_table('model_providers')
    # ### end Alembic commands ###
